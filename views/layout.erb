<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>BIST Veri Analizi</title>
  <link rel="icon" type="image/x-icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>📈</text></svg>">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/style.css" rel="stylesheet">
  <script>
    // Console'u temizle - sadece SES uyarılarını filtrele
    if (typeof console !== 'undefined') {
      const originalConsoleWarn = console.warn;
      console.warn = function() {
        const message = Array.from(arguments).join(' ');
        if (!message.includes('SES') && 
            !message.includes('dateTaming') && 
            !message.includes('mathTaming') &&
            !message.includes('lockdown-install') &&
            !message.includes('Removing unpermitted intrinsics')) {
          originalConsoleWarn.apply(console, arguments);
        }
      };
    }
  </script>
  <script src="https://cdn.plot.ly/plotly-2.27.0.min.js"></script>
</head>
<body>
  <%= erb :'partials/_header' %>
  
  <div class="container mt-4">
    <% if @error_message %>
      <%= erb :'partials/_error' %>
    <% end %>
    <%= yield %>
  </div>

  <%= erb :'partials/_footer' %>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
  <script>
    // Dark Mode - Sayfa yüklenir yüklenmez tema uygula
    (function() {
      // URL parametresi veya LocalStorage'dan tema durumunu al
      const urlParams = new URLSearchParams(window.location.search);
      const urlTheme = urlParams.get('theme');
      const savedTheme = urlTheme || localStorage.getItem('theme') || 'light';
      
      // Tema uygula
      function applyTheme(theme) {
        console.log('Tema uygulanıyor:', theme);
        if (theme === 'dark') {
          document.documentElement.setAttribute('data-bs-theme', 'dark');
          document.body.setAttribute('data-bs-theme', 'dark');
        } else {
          document.documentElement.setAttribute('data-bs-theme', 'light');
          document.body.setAttribute('data-bs-theme', 'light');
        }
      }
      
      // Hemen tema uygula
      applyTheme(savedTheme);
      
      // LocalStorage'a kaydet
      if (urlTheme) {
        localStorage.setItem('theme', urlTheme);
      }
    })();
    
    // Dark Mode Toggle - DOM yüklendikten sonra
    document.addEventListener('DOMContentLoaded', function() {
      const darkModeToggle = document.getElementById('darkModeToggle');
      const darkModeIcon = document.getElementById('darkModeIcon');
      
      if (!darkModeToggle || !darkModeIcon) {
        console.error('Dark mode butonları bulunamadı');
        return;
      }
      
      // İkon durumunu güncelle
      const currentTheme = document.documentElement.getAttribute('data-bs-theme') || 'light';
      darkModeIcon.textContent = currentTheme === 'dark' ? '☀️' : '🌙';
      
      // Toggle buton event listener
      darkModeToggle.addEventListener('click', function() {
        const currentTheme = document.documentElement.getAttribute('data-bs-theme') || 'light';
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        console.log('Tema değiştiriliyor:', currentTheme, '->', newTheme);
        
        // URL'i güncelle ve sayfayı yenile
        const url = new URL(window.location);
        if (newTheme === 'dark') {
          url.searchParams.set('theme', 'dark');
        } else {
          url.searchParams.delete('theme');
        }
        
        // LocalStorage'a kaydet
        localStorage.setItem('theme', newTheme);
        
        // Sayfayı yenile
        window.location.href = url.toString();
      });
    });
  </script>
</body>
</html>
